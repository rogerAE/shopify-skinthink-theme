{%- comment -%}
  Renders a product card with an inline layout
  The logic is incorporated from the "product-grid-item" snippet,
  so this component shares the same class naming and functionalities

  Key differences:
  - layout is inline
  - form errors are shown within the product info container
  - quick buy button's logic and position
  - omission of columns classes
  - the ability to remove animations even if they are enabled globally
  - content alignment from global settings isn't applied

  Accepts:
  - product: {Object} product (required)
  - entry_animation: {String} Type of the entry animation
  - animations_enabled: {String} Enable/disable the animations regardless of global settings
  - animation_delay: {Number} Factor based on grid items per row
  - animation_anchor: {String} Hook for the AOS animation
  - image_aspect_ratio_setting: {String} image aspect ratio setting from section settings
  - sizes: {String} Image sizes for image render snippet (optional)
  - button_classes: {String} Quick buy button's classes (optional)

  Usage:
  {% render 'product-card-inline', product: all_products[block.settings.product], animations_enabled: false, index: forloop.index0 %}
{%- endcomment -%}

{%- liquid
  assign heading_style = settings.heading_style
  assign sold_out = false
  assign custom_badge_metafield = false

  assign single_variant = false
  if product.variants.size == 1 and product.selling_plan_groups.size == 0
    assign single_variant = true
  endif

  if product.metafields.theme.badge != blank and product.metafields.theme.badge.type == 'single_line_text_field'
    assign custom_badge_metafield = true
    assign custom_badge_metafield_text = product.metafields.theme.badge.value
  endif

  unless product.available
    assign sold_out = true
  endunless

  assign quick_buy = settings.quick_buy
  assign current_variant = product.selected_or_first_available_variant
  assign featured_media = product.featured_media
  assign product_grid_hover = settings.product_grid_hover
  assign product_grid_hover_animation = settings.product_grid_hover_animation
  if product.media.size <= 1 or product_grid_hover == 'none'
    assign product_grid_hover = false
  endif
  assign product_image_tag = 'div'
  if product_grid_hover == 'slideshow'
    assign product_image_tag = 'hover-slideshow'
  endif

  capture item_unique
    assign timestamp = 'now' | date: '%s'
    assign block_id = block_id | default: ''
    echo 'product-inline-card--' | append: section.id | append: '-' | append: block_id | append: '-' | append: product.id | append: '--' | append: timestamp
  endcapture

  assign animations_enabled = animations_enabled | default: settings.animations_enabled, allow_false: true
  assign animation_delay = animation_delay | default: 0
  assign aos_delay_default = animation_delay | times: 150
  assign aos_delay = aos_delay | default: aos_delay_default
  assign entry_animation = entry_animation | default: 'fade-left'
  assign aos_anchor_default = item_unique | prepend: '#'
  assign aos_anchor = aos_anchor | default: animation_anchor | default: aos_anchor_default
  assign intersection_ratio = intersection_ratio | default: '0.3'
  assign has_colors = false

  if settings.color_swatches_type != 'disabled' and product.has_only_default_variant == false
    capture swatch_translation
      echo 'general.swatches.color' | t
    endcapture

    assign swatch_labels = swatch_translation | remove: '  ' | replace: ', ', ',' | replace: ' ,', ',' | split: ','
    for label in swatch_labels
      assign sanitized_label = label | strip
      if product.options_by_name[sanitized_label].values.size > 0
        assign color_label = label
        assign has_colors = true
        break
      endif
    endfor
  endif

  assign color_option = product.options_by_name[color_label].values

  capture default_button_classes
    echo settings.atc_button_color | append: ' '
    echo settings.atc_button_style | append: ' '
    echo 'btn--medium'
  endcapture
  assign button_classes = button_classes | default: default_button_classes
-%}

{%- capture product_title -%}
  <a class="product-grid-item__title {{ heading_style }}" href="{{ product.url | within: collection }}" aria-label="{{ product.title | strip_html | escape }}" data-grid-link>
    {{- product.title | strip_html | escape -}}
  </a>
{%- endcapture -%}

{%- capture product_info_price -%}
  <a class="product-grid-item__price price{% if settings.bold_price %} price--bold{% endif %}" href="{{ product.url | within: collection }}" data-grid-link>
    {%- render 'product-price', product: product -%}
  </a>
{%- endcapture -%}

<div class="product-grid-item product-grid-item--inline grid__item {% if sold_out %} soldout{% endif %}"
  data-product-block
  {% if animations_enabled %}
    data-aos-intersection="{{ intersection_ratio }}"
  {% endif %}
  id="{{ item_unique }}"
>
  {%- comment -%} Image {%- endcomment -%}
  <{{ product_image_tag }} class="product-grid-item__image"
    {% if animations_enabled %}
      data-aos="{{ entry_animation }}"
      {% if aos_anchor %}
        data-aos-anchor="{{ aos_anchor }}"
      {% endif %}
      data-aos-delay="{{ aos_delay }}"
    {% endif %}
    data-product-media-container
  >
    {%- liquid
      assign grid_image_size = settings.image_size
      assign image = featured_media.preview_image
      assign image_aspect_ratio = image.aspect_ratio | default: 1
      assign image_container_class = 'product__media__container'
      if image_aspect_ratio_setting == blank
        assign image_aspect_ratio_setting = settings.image_aspect_ratio
      endif

      if grid_image_size == 'contain'
        assign container_aspect_ratio = 1 | divided_by: image_aspect_ratio_setting

        if image_aspect_ratio < container_aspect_ratio
          assign image_container_class = image_container_class | append: ' product__media__container--portrait'
        else
          assign image_container_class = image_container_class | append: ' product__media__container--landscape'
        endif
      endif

      assign sizes_default = '(min-width: 768px) 300px' | append: ', 150px'
      assign sizes = sizes | default: sizes_default

      case settings.image_size
        when 'cover'
          assign image_cover = true
        when 'contain'
          assign image_cover = false
      endcase

      assign aspect_ratio = 1 | divided_by: image_aspect_ratio_setting
    -%}
    <div class="{{ image_container_class }}" style="--aspect-ratio: {{ image_aspect_ratio }};">
      <a class="product__media__holder"
        href="{{ product.url | within: collection }}"
        aria-label="{{ product.title | strip_html | escape }}"
        data-grid-link
      >
        {%- if product.media.size > 0 -%}
          <deferred-loading
            class="product__media__image{% if product_grid_hover %} product__media__image--hover-{{ product_grid_hover_animation }}{% else %} product__media__image--hover-none{% endif %}"
            data-product-media-featured
            {% if has_colors %} data-deferred-container="[data-product-block]"{% endif %}
          >
            {%- capture image_attributes -%}
              data-product-image
              data-grid-image
            {%- endcapture -%}

            {%- render 'image-fill',
              cover: image_cover,
              is_background: true,
              img_object: image,
              image_attributes: image_attributes,
              sizes: sizes,
              aspect_ratio: aspect_ratio,
              loading: loading,
              fetchpriority: fetchpriority,
              preload: preload,
              classes: 'product__media product__media--featured-visible'
            -%}

            {%- if has_colors -%}
              <template>
                <div data-deferred-content>
                  {%- for option in color_option -%}
                    {%- liquid
                      for variant in product.variants
                        if variant.options contains option
                          assign swatch_variant = variant
                          break
                        endif
                      endfor
                    -%}
                    {%- if swatch_variant.featured_image != blank -%}
                      {%- capture image_variant_attributes -%}
                        data-grid-image
                        data-variant-id="{{ swatch_variant.id }}"
                      {%- endcapture -%}
                      {%- capture image_secondary_variant_attributes -%}
                        data-variant-secondary-id="{{ swatch_variant.id }}"
                      {%- endcapture -%}
                      {%- render 'image-fill',
                        cover: image_cover,
                        is_background: true,
                        img_object: swatch_variant.featured_image,
                        image_attributes: image_variant_attributes,
                        sizes: sizes,
                        aspect_ratio: aspect_ratio,
                        classes: 'product__media'
                      -%}
                      {%- render 'image-fill',
                        cover: image_cover,
                        is_background: true,
                        img_object: swatch_variant.featured_image,
                        image_attributes: image_secondary_variant_attributes,
                        sizes: sizes,
                        aspect_ratio: aspect_ratio,
                        classes: 'product__media product__media--featured-secondary'
                      -%}
                    {%- endif -%}
                  {%- endfor -%}
                </div>
              </template>
            {%- endif -%}

            <span class="visually-hidden">{{ image.alt | default: product.title | strip_html | escape }}</span>
          </deferred-loading>
        {%- else -%}
          <div class="product__media__image">
            {%- render 'image-fill',
              cover: image_cover,
              is_background: true,
              img_object: product.featured_image,
              classes: 'product__media',
              aspect_ratio: aspect_ratio,
              loading: loading,
              fetchpriority: fetchpriority,
              preload: preload,
              placeholder_svg: 'product-1'
            -%}
          </div>
        {%- endif -%}

        {%- if product_grid_hover == 'slideshow' and product.media.size > 1 -%}
          <div class="product__media__hover product__media__hover--{{ product_grid_hover_animation }} product__media__slider" data-hover-slideshow-holder>
            {%- for media in product.media limit: 4 -%}
              {%- if media != featured_media -%}
                {%- assign image = media.preview_image -%}

                <div class="product__media__slide" data-hover-slideshow-item>
                  {%- render 'image-fill',
                    cover: image_cover,
                    is_background: true,
                    img_object: image,
                    sizes: sizes,
                    aspect_ratio: aspect_ratio,
                    classes: 'product__media'
                  -%}
                </div>
              {%- endif -%}
            {%- endfor -%}
          </div>

          {%- if product.media.size > 2 -%}
            <div class="progress-bar">
              <div class="progress-bar__inner" data-hover-slideshow-progress></div>
            </div>
          {%- endif -%}
        {%- elsif product_grid_hover == 'image' and product.media[1].preview_image != blank -%}
          {%- assign image = product.media[1].preview_image -%}
          <deferred-loading
            class="product__media__hover product__media__hover--{{ product_grid_hover_animation }}"
            {% if has_colors %} data-deferred-container="[data-product-block]" data-deferred-triggers="[data-deferred-trigger-element]"{% endif %}
          >
            {%- render 'image-fill',
              cover: image_cover,
              is_background: true,
              img_object: image,
              sizes: sizes,
              image_attributes: 'data-product-image-hover',
              aspect_ratio: aspect_ratio,
              classes: 'product__media__hover-img product__media__hover-img--visible product__media'
            -%}

            {%- if has_colors -%}
              <template>
                <div data-deferred-content>
                  {%- for variant in product.variants -%}
                    {%- assign featured_image_index = variant.featured_image.position -%}
                    {%- if featured_image_index > 1 -%}
                      {%- assign swatch_image_hover = product.media[featured_image_index].preview_image -%}
                      {%- if swatch_image_hover -%}
                        {%- capture image_attributes -%}
                          data-variant-id="{{ variant.id }}"
                          data-product-image-hover
                        {%- endcapture -%}

                        {%- render 'image-fill',
                          cover: image_cover,
                          is_background: true,
                          img_object: swatch_image_hover,
                          image_attributes: image_attributes,
                          sizes: sizes,
                          loading: 'eager',
                          aspect_ratio: aspect_ratio,
                          classes: 'product__media product__media__hover-img'
                        -%}
                      {%- endif -%}
                    {%- endif -%}
                  {%- endfor -%}
                </div>
              </template>
            {%- endif -%}
          </deferred-loading>
        {%- endif -%}
      </a>{%- liquid
  assign show_sale_badge = settings.show_sale_badge
  assign show_custom_badge = settings.show_custom_badge
  assign show_sold_badge = settings.show_sold_badge
  assign show_saving_badge = settings.show_saving_badge
  assign sold_out_text = 'products.product.sold_out' | t
  assign sale_text = 'products.product.sale' | t

  assign on_sale = false
  if product.compare_at_price > product.price
    assign on_sale = true
  endif

  if settings.show_saving_badge
    assign price = current_variant.price
    assign price_compare = current_variant.compare_at_price
    assign price_difference = price_compare | minus: price
    assign test_variants = product.variants | where: 'compare_at_price' | where: 'available', true

    if test_variants.size > 0
      for variant in test_variants
        assign variant_price_difference = variant.compare_at_price | minus: variant.price

        if variant_price_difference > price_difference
          assign price = variant.price
          assign price_compare = variant.compare_at_price
          assign price_difference = variant_price_difference
        endif
      endfor
    endif

    if settings.currency_code_enable
      assign discount = price_difference | money_without_trailing_zeros | append: ' ' | append: cart.currency.iso_code
    else
      assign discount = price_difference | money_without_trailing_zeros
    endif

    if settings.saving_badge_type == 'percentage'
      assign percent_off = price_difference | times: 1.00 | divided_by: price_compare | times: 100
      assign discount = percent_off | floor | append: '%'
    endif

    if product.variants.size == 1 and price_difference > 0
      assign saving_badge_text = 'products.product.save_badge_html' | t: discount: discount
    endif

    if product.variants.size > 1 and price_difference > 0
      assign saving_badge_text = 'products.product.save_badge_up_to_html' | t: discount: discount
    endif

    if saving_badge_text == blank
      assign show_saving_badge = false
    endif
  endif
-%}

{%- capture product_badges -%}
  {%- if custom_badge_metafield and show_custom_badge -%}
    <div class="product-badge__item product-badge__item--custom">
      <span>{{ custom_badge_metafield_text }}</span>
    </div>
  {%- endif -%}

  {%- if sold_out and show_sold_badge -%}
    <div class="product-badge__item product-badge__item--sold">
      <span>{{ sold_out_text }}</span>
    </div>
  {%- endif -%}

  {%- if on_sale and show_sale_badge and show_saving_badge == false -%}
    <div class="product-badge__item product-badge__item--sale">
      <span>{{ sale_text }}</span>
    </div>
  {%- endif -%}

  {%- if show_saving_badge -%}
    <div class="product-badge__item product-badge__item--saving">
      <span>{{ saving_badge_text }}</span>
    </div>
  {%- endif -%}
{%- endcapture -%}

{%- unless product_badges == blank -%}
  <div class="product-badge"
    {% if animations_enabled %}
      data-aos="fade"
      {% if aos_anchor %}
        data-aos-anchor="{{ aos_anchor }}"
      {% endif %}
      {% if aos_custom_init %}
        data-aos-custom-init
      {% endif %}
      data-aos-delay="{{ aos_delay }}"
    {% endif %}>
    {{- product_badges -}}
  </div>
{%- endunless -%}</div>
  </{{ product_image_tag }}>

  {%- comment -%} Product info {%- endcomment -%}
  <div class="product-grid-item__info"
    {% if animations_enabled %}
      data-aos="{{ entry_animation }}"
      {% if aos_anchor %}
        data-aos-anchor="{{ aos_anchor }}"
      {% endif %}
      data-aos-delay="{{ aos_delay }}"
    {% endif %}
  >
    {% comment %} Title {% endcomment %}
    {{ product_title }}

    {%- comment -%} Product tagline {%- endcomment -%}
    {%- assign cutline_color = settings.cutline_color -%}{%- if product.metafields.theme.cutline != blank and product.metafields.theme.cutline.type == 'single_line_text_field' -%}

{%- liquid
  capture style
    case cutline_color
      when 'body'
        echo 'color: var(--text);'
      when 'accent'
        echo 'color: var(--accent);'
    endcase
  endcapture
-%}

  <p class="product-cutline" style="{{ style }}">{{ product.metafields.theme.cutline.value }}</p>
{%- endif -%}
{%- comment -%} Price {%- endcomment -%}
    {{ product_info_price }}

    {%- if has_colors -%}
      <product-grid-item-swatch class="product-grid-item__swatch
        {%- if settings.color_swatches_product_style == 'rectangle' %} product-grid__swatch--rectangle{% endif %}"
        data-swatch-handle="{{ product.handle }}"
        data-swatch-label="{{ color_label }}">
        {%- for option in color_option -%}
          {%- liquid
            for variant in product.variants
              if variant.options contains option
                assign swatch_variant = variant
                break
              endif
            endfor

            assign swatch_image_src = swatch_variant.featured_media.preview_image.src
            if swatch_image_src
              assign swatch_image_src = swatch_image_src | image_url: width: 600 | replace: '&width=600', ''
            else
              assign swatch_image_src = ''
            endif

            if settings.color_swatches_type == 'native'
              if option.swatch.image
                assign image_url = option.swatch.image | image_url: width: 600 | replace: '&width=600', ''
                assign swatch_style = 'background-image: url(' | append: image_url | append: ')'
              elsif option.swatch.color
                assign swatch_style = '--swatch: ' | append: option.swatch.color
              else
                assign swatch_style = nil
              endif
            endif
          -%}

          <div class="swatch__button{%- if forloop.index > 4 and color_option.size > 5 %} is-hidden{% endif -%}" data-swatch-button data-value="{{ option }}" data-tooltip="{{ option | escape_once | capitalize }}">
            <div id="{{ product.id }}-{{ swatch_variant.id }}-{{ option | handle }}"
              class="swatch__label"
              data-swatch="{{ option }}"
              data-swatch-variant="{{ swatch_variant.id }}"
              data-swatch-image="{{ swatch_image_src }}"
              data-swatch-image-id="{{ swatch_variant.featured_media.id | default: '' }}"
              data-swatch-index="{{ forloop.index0 }}"
              style="{{ swatch_style }}">
            </div>
            {%- assign color_variant_text = 'general.swatches.color_variant' | t -%}
            {%- assign swatch_product_title = product.title | strip_html | escape -%}
            <a href="{{ product.url }}?variant={{ swatch_variant.id }}" data-swatch-variant="{{ swatch_variant.id }}" data-deferred-trigger-element class="swatch__link">{{ swatch_product_title | append: ' - ' | append: color_variant_text | append: ': ' | append: option }}</a>
          </div>
        {%- endfor -%}

        {%- if color_option.size > 5 -%}
          {%- assign more_colors = color_option.size | minus: 4 -%}

          <button type="button" class="swatch__text-more" data-swatches-more>{{ 'general.swatches.more_colors' | t: number: more_colors }}</button>
        {%- endif -%}
      </product-grid-item-swatch>
    {%- endif -%}

    <div class="product-grid-item__quick-buy"
      {% if animations_enabled %}
        data-aos="fade"
        {% if aos_anchor %}
          data-aos-anchor="{{ aos_anchor }}"
        {% endif %}
        data-aos-delay="{{ aos_delay }}"
      {% endif %}
    >
      {%- unless quick_buy == 'none' -%}
        {%- if single_variant -%}
          {%- capture unique -%}{{ section.id }}-{{ product.id }}{%- endcapture -%}

          {%- form 'product', product, data-product-form: '', data-quickbuy-form: '', id: unique, class: 'quick__form' -%}
            <input type="hidden" name="quantity" value="1">
            <input type="hidden" name="id" value="{{ current_variant.id }}">
            <button type="submit"
              name="add"
              class="btn btn--quick-buy {{ button_classes }}"
              data-add-to-cart
              data-atc-trigger
              {% if sold_out %} disabled{% endif %}
            >
              <hover-button></hover-button>
              <span>
                {%- if sold_out -%}
                  {{ 'products.product.sold_out' | t }}
                {%- else -%}
                  {{ 'products.product.quick_view' | t }}
                {%- endif -%}
              </span>

              <svg height="24" width="24" class="svg-loader">
                <circle r="10" cx="12" cy="12" />
                <circle stroke-dasharray="87.96459430051421 87.96459430051421" r="10" cx="12" cy="12" />
              </svg>
            </button>

            <div class="product-grid-item__error" role="alert" data-cart-errors-container></div>
          {%- endform -%}
        {%- else -%}
          <a class="btn btn--quick-buy {{ button_classes }}"
            href="{{ product.url | within: collection }}"
            aria-label="{{ 'products.product.quick_view' | t }}"
            data-handle="{{ product.handle }}"
            data-button-quick-view
            data-grid-link
            {% if sold_out %} disabled{% endif %}
          >
            <hover-button></hover-button>
            <span>
              {%- if sold_out -%}
                {{ 'products.product.sold_out' | t }}
              {%- else -%}
                {{ 'products.product.quick_view' | t }}
              {%- endif -%}
            </span>

            <svg height="24" width="24" class="svg-loader">
              <circle r="10" cx="12" cy="12" />
              <circle stroke-dasharray="87.96459430051421 87.96459430051421" r="10" cx="12" cy="12" />
            </svg>
          </a>
        {%- endif -%}
      {%- else -%}
        <a class="btn btn--quick-buy {{ button_classes }}"
          href="{{ product.url | within: collection }}"
          aria-label="{{ 'products.general.shop_now' | t }}"
          {% if sold_out %} disabled{% endif %}
          data-grid-link
        >
          <span>
            {%- if sold_out -%}
              {{ 'products.product.sold_out' | t }}
            {%- else -%}
              {{ 'products.general.shop_now' | t }}
            {%- endif -%}
          </span>
        </a>
      {%- endunless -%}
    </div>
  </div>
</div>