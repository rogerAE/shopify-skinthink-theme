<!-- /sections/section-tab-collections -->
{%- liquid
  assign section_width = section.settings.width
  assign image_aspect_ratio = section.settings.image_aspect_ratio
  assign type_style = section.settings.type_style
  assign heading_size = section.settings.heading_size | times: 0.01
  assign text_size = section.settings.text_size | times: 0.01
  assign tab_heading_size = section.settings.tab_heading_size | times: 0.01
  assign columns = settings.products_per_row_on_desktop | plus: 0
  assign columns_mobile = section.settings.columns_mobile | plus: 0
  assign columns_small = columns | at_most: 2
  assign text_alignment = section.settings.text_alignment
  assign show_buttons = section.settings.show_buttons
  assign button_position = section.settings.button_position
  assign collection_button_text = section.settings.collection_button_text
  assign collection_button_style = section.settings.collection_button_style
  assign collection_button_color = section.settings.collection_button_color
  assign collection_button_size = section.settings.collection_button_size
  assign bg_color = section.settings.bg_color
  assign animations_enabled = settings.animations_enabled
  assign id = 'TabCollections--' | append: section.id
  assign selector_id = '#' | append: id
  assign aos_anchor = selector_id
  assign aos_anchor_body = '#tabCollectionsBody--' | append: section.id
  assign animation_delay = 150
  assign collection_buttons = ''

  capture type_adjustment
    case type_style
      when 'font-heading'
        echo 'var(--adjust-heading)'
      when 'font-body'
        echo 'var(--adjust-body)'
      when 'subheading-text'
        echo 'var(--adjust-accent)'
    endcase
  endcapture

  assign collection_button_advanced_class = 'btn--advanced'
  if collection_button_style != 'btn--text'
    assign collection_button_advanced_class = collection_button_advanced_class | append: ' btn--advanced-width-height'
  endif

  comment
    Images sizes
  endcomment
  assign gutter_space = columns | minus: 1 | times: 20 | append: 'px'

  assign wrapper_width_xlg = '100vw - 120px'
  if section_width == 'wrapper'
    assign wrapper_width_xlg = '1440px - 120px'
  endif
  assign wrapper_width_lg = '100vw - 120px'
  assign wrapper_width_md = '100vw - 40px'
  assign wrapper_width_sm = wrapper_width_md

  assign img_width_xlg = 'calc((' | append: wrapper_width_xlg | append: ' - ' | append: gutter_space | append: ') / ' | append: columns | append: ')'
  assign img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - ' | append: gutter_space | append: ') / ' | append: columns | append: ')'
  assign img_width_md = 'calc(((' | append: wrapper_width_md | append: ') * 0.9 - 20px) / 2)'
  assign img_width_sm = 'calc(' | append: wrapper_width_sm | append: ' - 20px)'

  assign sizes = '(min-width: 1440px) ' | append: img_width_xlg | append: ', (min-width: 1024px) ' | append: img_width_lg | append: ', (min-width: 768px) ' | append: img_width_md | append: ', ' | append: img_width_sm

  # Featured image
  assign featured_img_width_xlg = 'calc((' | append: wrapper_width_xlg | append: ' - 40px) / 3)'
  assign featured_img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - 40px) / 3)'

  assign featured_image_sizes = '(min-width: 1440px) ' | append: featured_img_width_xlg | append: ', (min-width: 1024px) ' | append: featured_img_width_lg | append: ', (min-width: 768px) ' | append: img_width_md | append: ', ' | append: img_width_sm
-%}

{{ 'section-tab-collections.css' | asset_url | stylesheet_tag }}

{%- style -%}
  {{ selector_id }} {
    --product-media-padding-top: {{ image_aspect_ratio | times: 100 | append: '%' }};
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;

    {% if bg_color.alpha != 0.0 and bg_color != '' -%}
      --bg: {{ bg_color }};
    {%- endif %}
  }

  @media screen and (min-width: 1024px) {
    {{ selector_id }} {
      --grid: repeat({{ columns }}, minmax(0, 1fr));
    }
  }

  @media screen and (min-width: 480px) and (max-width: 1023px) {
    {{ selector_id }} {
      --grid: repeat({{ columns_small }}, minmax(0, 1fr));
    }
  }

  {{ selector_id }} .tabs__nav { --text-size: calc({{ type_adjustment }} * {{ tab_heading_size }}); }
  {{ selector_id }} .section__header { --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }}); }
  {{ selector_id }} .tab-collections__text { --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }}); }

  @media screen and (max-width: 767px) {
    {% if columns_mobile > 1 -%}
      {{ selector_id }} .carousel--mobile { --item-width-mobile: calc(90% / {{ columns_mobile }} - var(--grid-gutter)); }
    {%- endif %}
  }
{%- endstyle -%}

<section
  id="{{ id }}"
  class="section-padding tab-collections{%- render 'button-fallback-classes', primary_color: collection_button_color, section_bg_color: bg_color -%}"
  data-section-id="{{ section.id }}"
  data-section-type="tab-collections"
  data-columns="{{ columns }}"
  {% if animations_enabled %}
    data-aos-watch-anchors
  {% endif %}
>
  <div class="{{ section_width }}">
    {%- if section.blocks.size > 0 -%}
      {%- assign current_idx = 0 -%}

      {%- if section.blocks.size == 3 -%}
        {%- assign current_idx = 1 -%}
      {%- endif -%}

      <div
        class="tab-collections-wrapper tabs {{ text_alignment }}"
        data-tabs-holder
        data-start-index="{{ current_idx }}"
      >
        {%- if section.settings.title != blank or section.settings.text != blank -%}
          <div class="tab-collections__header">
            {%- if section.settings.title != empty -%}
              <div class="section__header">
                <h2
                  class="h2"
                  {% if animations_enabled %}
                    data-aos="fade-up"
                    data-aos-anchor="{{ aos_anchor }}"
                    data-aos-delay="{{ animation_delay }}"
                    {%- assign animation_delay = animation_delay | plus: 150 -%}
                  {% endif %}
                >
                  {{ section.settings.title }}
                </h2>

                {%- if settings.show_spacer_lines -%}
                  <hr
                    class="section__heading-line"
                    {% if animations_enabled %}
                      data-aos="fade-up"
                      data-aos-delay="{{ animation_delay }}"
                      data-aos-anchor="{{ aos_anchor }}"
                    {% endif %}
                  >
                  {%- assign animation_delay = animation_delay | plus: 150 -%}
                {%- endif -%}
              </div>
            {%- endif -%}

            {%- if section.settings.text != empty -%}
              <p
                class="tab-collections__text"
                {% if animations_enabled %}
                  data-aos="fade-up"
                  data-aos-anchor="{{ aos_anchor }}"
                  data-aos-delay="{{ animation_delay }}"
                  {%- assign animation_delay = animation_delay | plus: 150 -%}
                {% endif %}
              >
                {{ section.settings.text }}
              </p>
            {%- endif -%}
          </div>
        {%- endif -%}

        {%- assign tabs_navigation = '' -%}
        {%- assign tabs = '' -%}

        {%- for block in section.blocks -%}
          {%- liquid
            assign tab_collection = collections[block.settings.tab_collection]
            assign tab_collection_url = tab_collection.url | default: '#!'
            assign tab_collection_title = block.settings.title | default: tab_collection.title | default: 'Collection'
            assign tab_collection_products = tab_collection.products
            assign number_of_products = block.settings.number_of_products
            assign image = block.settings.image | default: tab_collection.image
            assign heading = block.settings.heading
            assign heading_size = block.settings.heading_size | times: 0.01
            assign overlay_opacity = block.settings.overlay_opacity | times: 0.01
            assign button_text = block.settings.button_text
            assign button_link = block.settings.button_link | default: tab_collection_url
            assign button_style = block.settings.button_style
            assign button_color = block.settings.button_color
            assign button_size = block.settings.button_size
            assign show_image = block.settings.show_image

            assign button_advanced_class = 'btn--advanced'
            if button_style != 'btn--text'
              assign button_advanced_class = button_advanced_class | append: ' btn--advanced-width-height btn--advanced-adaptive-width'
            endif

            capture collection_button_classes
              echo 'btn'
              echo ' ' | append: collection_button_style
              echo ' ' | append: collection_button_size
              echo ' ' | append: collection_button_color
              echo ' ' | append: collection_button_advanced_class

              if forloop.first
                echo ' current'
              endif
            endcapture

            capture onboarding_products_one
              for i in (1..number_of_products)
                capture placeholder_index
                  cycle 1, 2, 3, 5, 6
                endcapture
                assign columns = settings.products_per_row_on_desktop | plus: 0
                assign product_index = forloop.index0
                if show_image
                  assign product_index = forloop.index
                endif
                assign items_animation_delay = product_index
                render 'product-grid-item--onboarding', carousel: true, columns_mobile: columns_mobile, placeholder_index: placeholder_index, index: forloop.index0, block_id: block.id, animation_anchor: aos_anchor_body, animation_delay: items_animation_delay
              endfor
            endcapture

            capture onboarding_products_two
              for i in (1..number_of_products)
                capture placeholder_index
                  cycle 6, 5, 3, 2, 1
                endcapture
                assign columns = settings.products_per_row_on_desktop | plus: 0
                assign product_index = forloop.index0
                if show_image
                  assign product_index = forloop.index
                endif
                assign items_animation_delay = product_index
                render 'product-grid-item--onboarding', carousel: true, columns_mobile: columns_mobile, placeholder_index: placeholder_index, index: forloop.index0, block_id: block.id, animation_anchor: aos_anchor_body, animation_delay: items_animation_delay
              endfor
            endcapture
          -%}

          {%- capture tabs_navigation -%}
            {{ tabs_navigation }}

            <li class="tabs__link{% if forloop.first %} current{% endif %}"
              data-tabs-link="{{ forloop.index0 }}"
              data-block-id="{{ block.id }}"
              tabindex="0"
              {{ block.shopify_attributes }}>
              <span>{{ tab_collection_title }}</span>
            </li>
          {%- endcapture -%}

          {%- capture tabs -%}
            {{ tabs }}

            <div class="tab{% if forloop.first %} current{% endif %}" data-tab="{{ forloop.index0 }}">
              <div class="tab-collections__container carousel__container">
                <div class="carousel carousel--mobile"
                  data-slider
                  data-slider-id="slider--{{ section.id }}-{{ block.id }}"
                  {% if show_image %}
                    data-slider-show-image
                  {% endif %}
                  role="group"
                >
                  {%- if show_image -%}
                    {%- assign animation_delay_body = 150 -%}
                    <div class="product-grid-item product-grid-item--featured carousel__item one-third mobile--one-whole"
                      data-slide
                      {% if animations_enabled %}
                        data-aos="fade-up"
                        data-aos-anchor="{{ aos_anchor_body }}"
                        data-aos-delay="{{ animation_delay_body }}"
                      {% endif %}>
                      {%- capture featured_image -%}
                        {%- style -%}
                          {{ selector_id }} .item--{{ block.id }} { --overlay-opacity: {{ overlay_opacity }}; }
                          {{ selector_id }} .item--{{ block.id }} .tab-collections__heading { --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }}); }
                        {%- endstyle -%}

                        <div class="tab-collections__featured-item item--{{ block.id }} {{ block.settings.text_color }} hover-scale">
                          {%- render 'image-fill', is_background: true, img_object: image, sizes: featured_image_sizes, classes: 'tab-collections__featured-image', placeholder_svg: 'collection-1' -%}

                          <div class="overlay"></div>

                          <div class="tab-collections__featured-item__content">
                            {%- if tab_collection_products.size > 0 -%}
                              <span class="tab-collections__products-counter subheading-text">{{ 'products.general.products_with_count' | t: count: tab_collection.all_products_count }}</span>
                            {%- endif -%}

                            {%- if heading != blank -%}
                              <div class="tab-collections__heading h1"
                                {% if animations_enabled %}
                                  data-aos="fade-up"
                                  data-aos-delay="{{ animation_delay_body }}"
                                  data-aos-anchor="{{ aos_anchor_body }}"
                                  {%- assign animation_delay_body = animation_delay_body | plus: 150 -%}
                                {% endif %}>
                                {{- heading -}}
                              </div>
                            {%- endif -%}

                            {%- if button_text != blank -%}
                              <div class="tab-collections__btn-wrapper"
                                {% if animations_enabled %}
                                  data-aos="fade"
                                  data-aos-delay="{{ animation_delay_body }}"
                                  data-aos-anchor="{{ aos_anchor_body }}"
                                  {%- assign animation_delay_body = animation_delay_body | plus: 150 -%}
                                {% endif %}>
                                <a class="btn {{ button_style }} {{ button_size }} {{ button_color }} {{ button_advanced_class }}"
                                  href="{{ button_link | default: '#' }}">
                                  <hover-button></hover-button>
                                  {{- button_text | escape -}}
                                </a>
                              </div>
                            {%- endif -%}
                          </div>
                        </div>
                      {%- endcapture -%}

                      {%- if button_text == blank and button_link != blank -%}
                        <a href="{{ button_link }}">{{ featured_image }}</a>
                      {%- else -%}
                        {{- featured_image -}}
                      {%- endif -%}
                    </div>
                  {%- endif -%}

                  {%- if tab_collection != blank -%}
                    {% comment %} Check if there are any products in the collection {% endcomment %}
                    {%- if tab_collection_products.size > 0 -%}
                      {%- liquid
                        for product in tab_collection_products limit: number_of_products
                          assign product_index = forloop.index0
                          if show_image
                            assign product_index = forloop.index
                          endif
                          assign items_animation_delay = product_index

                          render 'product-grid-item', product: product, carousel: true, columns_mobile: columns_mobile, block_id: block.id, animation_anchor: aos_anchor_body, animation_delay: items_animation_delay, image_aspect_ratio_setting: image_aspect_ratio, sizes: sizes
                        endfor
                      -%}
                    {%- else -%}
                      <div class="collection--no-results">
                        <p>{{ 'collections.general.no_matches' | t }}</p>
                      </div>
                    {%- endif -%}
                  {%- else -%}
                    {%- assign tab_index = forloop.index | modulo: 2 -%}
                    {%- if tab_index == 0 -%}
                      {{- onboarding_products_one -}}
                    {%- else -%}
                      {{- onboarding_products_two -}}
                    {%- endif -%}
                  {%- endif -%}
                </div>
              </div>
            </div>
          {%- endcapture -%}

          {%- capture collection_buttons -%}
            {{ collection_buttons }}

            <a href="{{ tab_collection_url }}"
              class="{{ collection_button_classes }}"
              {% if animations_enabled %}
                data-aos="fade-up"
                data-aos-anchor="{{ aos_anchor }}"
                data-aos-delay="{{ animation_delay }}"
              {% endif %}
              data-tab-ref="{{ forloop.index0 }}"
            >
              <hover-button></hover-button>
              {{- collection_button_text -}}
            </a>
          {%- endcapture -%}
        {%- endfor -%}

        {%- if tabs_navigation != '' and section.blocks.size > 1 or show_buttons -%}
          <div
            class="tab-collections__nav tabs__head"
            {% if animations_enabled %}
              data-aos="fade-up"
              data-aos-anchor="{{ aos_anchor }}"
              data-aos-delay="{{ animation_delay }}"
            {% endif %}
          >
            <div class="tabs-scrollbar" data-custom-scrollbar-parent>
              <div class="tabs-scrollbar__holder" data-custom-scrollbar-holder>
                <ul class="tabs__nav {{ type_style }}" data-custom-scrollbar-items>
                  {{ tabs_navigation }}
                </ul>

                <div class="custom-scrollbar" data-custom-scrollbar>
                  <div class="custom-scrollbar__thumb" data-custom-scrollbar-thumb></div>
                </div>
              </div>
            </div>
          </div>
        {%- endif -%}

        <div
          id="tabCollectionsBody--{{ section.id }}"
          class="tab-collections__body tabs__contents"
          data-tabs-contents
          data-aos-intersection="0.2"
        >
          {{ tabs }}
        </div>

        {%- if show_buttons and collection_button_text != blank -%}
          <div class="tab-collections__button tab-collections__button--{{ button_position }}">
            {{ collection_buttons }}
          </div>
        {%- endif -%}
      </div>
    {%- else -%}
      {%- render 'no-blocks' -%}
    {%- endif -%}
  </div>
</section>

{% schema %}
{
  "name": "Tab collections",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Products per row on mobile",
      "default": "1",
      "options": [
        {"label": "1", "value": "1"},
        {"label": "2", "value": "2"}
      ]
    },
    {
      "type": "range",
      "id": "image_aspect_ratio",
      "label": "Image aspect ratio",
      "min": 0.5,
      "max": 1.5,
      "step": 0.1,
      "unit": ":1",
      "default": 1.3
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Content alignment",
      "default": "text-center",
      "options": [
        {"label": "Center", "value": "text-center"},
        {"label": "Left", "value": "text-left"}
      ]
    },
    {
      "label": "Heading",
      "id": "title",
      "type": "text",
      "default": "Best Sellers"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading size",
      "default": 100,
      "min": 50,
      "max": 200,
      "step": 5,
      "unit": "%"
    },
    {
      "label": "Text",
      "id": "text",
      "type": "text",
      "default": "Our favorite picks for the season"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "default": 100,
      "min": 70,
      "max": 150,
      "step": 10,
      "unit": "%"
    },
    {
      "type": "select",
      "label": "Tab heading style",
      "id": "type_style",
      "default": "subheading-text",
      "options": [
        {"label": "Heading", "value": "font-heading"},
        {"label": "Body", "value": "font-body"},
        {"label": "Accent", "value": "subheading-text"}
      ]
    },
    {
      "type": "range",
      "id": "tab_heading_size",
      "label": "Tab heading size",
      "default": 100,
      "min": 100,
      "max": 200,
      "step": 5,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "Buttons"
    },
    {
      "type": "select",
      "id": "button_position",
      "label": "Button position",
      "default": "top",
      "info": "Only applies when Content alignment is set to Center",
      "options": [
        {"label": "Top", "value": "top"},
        {"label": "Bottom", "value": "bottom"}
      ]
    },
    {
      "type": "checkbox",
      "id": "show_buttons",
      "label": "Show collection link buttons",
      "default": true
    },
    {
      "type": "text",
      "id": "collection_button_text",
      "label": "Text",
      "default": "Shop Now"
    },
    {
      "type": "select",
      "id": "collection_button_color",
      "label": "Color",
      "default": "btn--black",
      "options": [
        {"label": "Primary", "value": "btn--primary"},
        {"label": "Secondary", "value": "btn--secondary"},
        {"label": "White", "value": "btn--white"},
        {"label": "Black", "value": "btn--black"}
      ]
    },
    {
      "type": "select",
      "id": "collection_button_style",
      "label": "Style",
      "default": "btn--solid",
      "options": [
        {"label": "Solid", "value": "btn--solid"},
        {"label": "Outline", "value": "btn--outline"},
        {"label": "Solid with borders", "value": "btn--solid-border"},
        {"label": "Soft", "value": "btn--soft"},
        {"label": "Text", "value": "btn--text"}
      ]
    },
    {
      "type": "select",
      "id": "collection_button_size",
      "label": "Size",
      "default": "btn--medium",
      "options": [
        {"label": "Small", "value": "btn--small"},
        {"label": "Medium", "value": "btn--medium"},
        {"label": "Large", "value": "btn--large"}
      ]
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background color"
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wrapper--full-padded",
      "options": [
        {"value": "wrapper--full-padded", "label": "Full width padded"},
        {"value": "wrapper", "label": "Page width"}
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "limit": 3,
      "settings": [
        {
          "type": "header",
          "content": "Collection"
        },
        {
          "label": "Tab heading",
          "id": "title",
          "type": "text"
        },
        {
          "type": "collection",
          "id": "tab_collection",
          "label": "Collection"
        },
        {
          "type": "range",
          "id": "number_of_products",
          "label": "Products",
          "default": 6,
          "min": 4,
          "max": 12,
          "step": 1
        },
        {
          "type": "header",
          "content": "Image"
        },
        {
          "type": "checkbox",
          "id": "show_image",
          "label": "Show image",
          "default": false
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Featured image"
        },
        {
          "type": "header",
          "content": "Overlay"
        },
        {
          "type": "range",
          "id": "overlay_opacity",
          "label": "Text contrast",
          "info": "Improves readability of text",
          "min": 0,
          "max": 95,
          "step": 5,
          "unit": "%",
          "default": 10
        },
        {
          "type": "header",
          "content": "Content"
        },
        {
          "type": "richtext",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "range",
          "id": "heading_size",
          "label": "Heading size",
          "default": 100,
          "min": 50,
          "max": 200,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "select",
          "id": "text_color",
          "label": "Text color",
          "default": "text-light",
          "options": [
            {"value": "text-light", "label": "Light"},
            {"value": "text-dark", "label": "Dark"}
          ]
        },
        {
          "type": "header",
          "content": "Button"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Text",
          "default": "View All",
          "info": "Leave blank to link entire image"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_color",
          "label": "Color",
          "default": "btn--white",
          "options": [
            {"label": "Primary", "value": "btn--primary"},
            {"label": "Secondary", "value": "btn--secondary"},
            {"label": "White", "value": "btn--white"},
            {"label": "Black", "value": "btn--black"}
          ]
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "btn--solid-border",
          "options": [
            {"label": "Solid", "value": "btn--solid"},
            {"label": "Outline", "value": "btn--outline"},
            {"label": "Solid with border", "value": "btn--solid-border"},
            {"label": "Soft", "value": "btn--soft"},
            {"label": "Text", "value": "btn--text"}
          ]
        },
        {
          "type": "select",
          "id": "button_size",
          "label": "Size",
          "default": "btn--medium",
          "options": [
            {"label": "Small", "value": "btn--small"},
            {"label": "Medium", "value": "btn--medium"},
            {"label": "Large", "value": "btn--large"}
          ]
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Tab collections",
      "blocks": [
        {
          "type": "collection",
          "settings": {
            "title": "Sale"
          }
        },
        {
          "type": "collection",
          "settings": {
            "title": "New Arrivals"
          }
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["header", "aside", "footer"]
  }
}
{% endschema %}
