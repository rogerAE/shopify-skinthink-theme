{%- comment -%} /sections/promotion-row.liquid {%- endcomment -%}

{%- liquid
  assign section_width = section.settings.width
  assign section_height = section.settings.height
  assign enable_mobile_height = section.settings.enable_mobile_height
  assign mobile_height = section.settings.mobile_height
  assign bg_color = section.settings.bg_color
  assign gradient = section.settings.gradient | default: 'none'
  assign enable_slider_mobile = section.settings.enable_slider_mobile
  assign columns_mobile = section.settings.columns_mobile | plus: 0
  assign block_count = section.blocks.size
  assign count_up_enabled = section.settings.count_up_enabled
  assign count_up_duration = section.settings.count_up_duration
  assign id = 'SectionPromotionRow--' | append: section.id
  assign selector_id = '#' | append: id
  assign animation_anchor = selector_id
  assign animations_enabled = settings.animations_enabled
  assign layout = section.settings.layout
  assign increase_border_radius = settings.increase_border_radius

  assign mobile_class = ' grid--mobile'
  assign mobile_item_class = ' grid__item'
  if enable_slider_mobile
    assign mobile_class = ' carousel--mobile'
    assign mobile_item_class = ' carousel__item'
  endif

  case columns_mobile
    when 1
      assign mobile_item_class = mobile_item_class | append: ' mobile--one-whole'
    when 2
      assign mobile_item_class = mobile_item_class | append: ' mobile--one-half'
  endcase

  assign bg_color_set = false
  if gradient != 'none' or bg_color.alpha != 0.0 and bg_color != ''
    assign bg_color_set = true
  endif

  comment
    Images sizes
  endcomment
  assign blocks_count = section.blocks.size
  assign blocks_gaps = blocks_count | minus: 1
  assign gaps_calc = 20 | times: blocks_gaps | append: 'px'

  # Desktop widths
  if section_width == 'wrapper--full-padded'
    assign wrapper_width_lg = '(100vw - 120px)'
  endif
  if section_width == 'wrapper'
    assign wrapper_width_lg = '(1440px - 120px)'
  endif
  assign img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - ' | append: gaps_calc | append: ') / ' | append: blocks_count | append: ')'

  # Tablet widths
  assign wrapper_width_md = '(100vw - 2 * 20px)'
  unless blocks_count == 4
    assign img_width_md = 'calc((' | append: wrapper_width_md | append: ' - ' | append: gaps_calc | append: ') / ' | append: blocks_count | append: ')'
  else
    if enable_slider_mobile
      assign img_width_md = 'calc((' | append: wrapper_width_md | append: ') / 2.2' | append: ')'
    else
      assign img_width_md = 'calc((' | append: wrapper_width_md | append: ' - 20px) / 2' | append: ')'
    endif
  endunless

  # Mobile widths
  assign img_width_sm = 'calc(' | append: wrapper_width_md | append: ')'
  if enable_slider_mobile
    assign img_width_sm = 'calc(' | append: wrapper_width_md | append: ' - 20px)'
  endif
-%}

{{ 'section-promotion-row.css' | asset_url | stylesheet_tag }}

{%- style -%}
  {{ selector_id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
    --min-height: {{ section_height }}px;

    {% if increase_border_radius -%}
      --radius: 34px;
    {%- endif %}

    {% if bg_color_set -%}
      {%- if gradient != 'none' -%}
        --bg: {{ gradient }};
      {%- else -%}
        --bg: {{ bg_color }};
      {%- endif -%}
    {%- endif %}
  }

  @media screen and (max-width: 767px) {
    {% if columns_mobile > 1 -%}
      {{ selector_id }} .carousel--mobile { --item-width-mobile: calc(90% / {{ columns_mobile }} - var(--grid-gutter)); }
      {{ selector_id }} .grid--mobile { --grid--mobile: repeat(2, minmax(0, 1fr)) }
    {%- endif %}

    {% if enable_mobile_height and mobile_height != section_height %}
      {{ selector_id }} { --min-height: {{ mobile_height }}px; }
    {%- endif %}
  }
{%- endstyle -%}

<section
  id="{{ id }}"
  class="promotion-row section-padding"
  data-section-id="{{ section.id }}"
  data-section-type="promotion-row"
>
  <div class="{{ section_width }}">
    {%- if block_count > 0 -%}
      <div class="promotion-row__inner promotion-row__inner--{{ block_count }}">
        <div class="promotion-row__grid promotion-row__grid--enlarge-{{ layout }}{{ mobile_class }}">
          {%- for block in section.blocks -%}
            {%- liquid
              assign block_id = block.id
              assign image = block.settings.image
              assign overlay_opacity = block.settings.overlay_opacity | times: 0.01
              assign subheading = block.settings.subheading
              assign subheading_size = block.settings.subheading_size | times: 0.01
              assign title = block.settings.heading
              assign heading_highlight_type = block.settings.heading_highlight_type
              assign highlight_color = block.settings.highlight_color
              assign highlight_text_color = block.settings.highlight_text_color
              assign heading_size = block.settings.heading_size | times: 0.01
              assign heading_size_mobile = heading_size
              assign description = block.settings.description
              assign description_size = block.settings.description_size | times: 0.01
              assign button_text = block.settings.button_text
              assign button_link = block.settings.button_link
              assign button_style = block.settings.button_style
              assign button_color = block.settings.button_color
              assign button_size = block.settings.button_size
              assign disclaimer = block.settings.disclaimer
              assign disclaimer_size = block.settings.disclaimer_size | times: 0.01
              assign bg_color = block.settings.bg_color
              assign text_color = block.settings.text_color
              assign gradient_background = block.settings.gradient_background | default: 'none'

              assign image_link = false
              if button_link != blank and button_text == blank
                assign image_link = true
              endif

              assign hover_scale = false
              if button_link != blank or button_text != blank
                assign hover_scale = true
              endif

              assign empty_bg_color = true
              if bg_color != 'rgba(0,0,0,0)' and bg_color != ''
                assign empty_bg_color = false
              endif

              if heading_size > 2.5
                assign heading_size_mobile = 2.5
              endif

              assign button_advanced_class = 'btn--advanced'
              if button_style != 'btn--text'
                assign button_advanced_class = button_advanced_class | append: ' btn--advanced-width-height btn--advanced-adaptive-width'
              endif

              assign enlarge_block = layout | times: 1
              case blocks_count
                when 1
                  # 100%
                when 2
                  # 66.66% / 33.33%
                  assign img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - ' | append: gaps_calc | append: ') / 1.5)'
                  unless forloop.index == enlarge_block
                    assign img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - ' | append: gaps_calc | append: ') / 3)'
                  endunless
                when 3
                  # 50% / 25% / 25%
                  assign img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - ' | append: gaps_calc | append: ') / 2)'
                  unless forloop.index == enlarge_block
                    assign img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - ' | append: gaps_calc | append: ') / 4)'
                  endunless
                when 4
                  # 100% / 33.33% / 33.33% / 33.33%
                  assign img_width_lg = 'calc(' | append: wrapper_width_lg | append: ')'
                  unless forloop.index == enlarge_block
                    assign img_width_lg = 'calc((' | append: wrapper_width_lg | append: ' - ' | append: gaps_calc | append: ') / 3)'
                  endunless

                  if enable_slider_mobile == false
                    assign img_width_md = 'calc(' | append: wrapper_width_md | append: ')'
                    unless forloop.index == enlarge_block
                      assign img_width_md = 'calc((' | append: wrapper_width_md | append: ' - ' | append: gaps_calc | append: ') / 3)'
                    endunless
                  endif
              endcase

              assign sizes = '(min-width: 1024px) ' | append: img_width_lg | append: ', (min-width: 768px) ' | append: img_width_md | append: ', ' | append: img_width_sm
            -%}

            {%- style -%}
              #SectionPromotionRow--{{ block_id }} {
                --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }});
                --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ description_size }});
                --overlay: {{ gradient_background }};
                --overlay-opacity: {{ overlay_opacity }};

                {%- if empty_bg_color == false and image == blank -%}
                  --overlay: {{ bg_color }};
                {%- endif -%}

                {%- if text_color != 'rgba(0,0,0,0)' and text_color != '' -%}
                  --text: {{ text_color }};
                {%- endif -%}

                {%- if heading_highlight_type != 'highlight' -%}
                  --highlight-color: var(--text);
                {%- endif -%}

                {%- if highlight_color != 'rgba(0,0,0,0)' and highlight_color != '' -%}
                  --highlight-color: {{ highlight_color }};
                {%- endif -%}

                {%- if highlight_text_color != 'rgba(0,0,0,0)' and highlight_text_color != '' -%}
                  --highlight-text-color: {{ highlight_text_color }};
                {%- endif -%}
              }

              #SectionPromotionRow--{{ block_id }} .promotion-row__item__subheading { --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ subheading_size }}); }
              #SectionPromotionRow--{{ block_id }} .promotion-row__item__disclaimer { --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ disclaimer_size }}); }

              @media only screen and (max-width: 767px) {
                #SectionPromotionRow--{{ block_id }} {
                  --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size_mobile }});
                }
              }
            {%- endstyle -%}{% comment %}
  Enhanced text decorations options - Liquid variables

  Dependencies:
    - Title liquid object from settings: `assign title = section.settings.title`
    - Highlight type from settings: `assign heading_highlight_type = section.settings.heading_highlight_type`
    - Highlight color from settings: `assign highlight_color = section.settings.highlight_color or assign highlight_color = block.settings.highlight_color`
    - SVG icons:
      - icon-squiggle.svg (assets)
      - icon-circle.liquid (snippet)
{% endcomment %}

{%- liquid
  comment
   Highlighted words count
  endcomment
  assign title_temp = title | split: '<em>'
  assign em_arr = ''
  if title_temp.size > 1
    for text_part in title_temp offset: 1
      assign em_text = text_part | split: '</em>' | first
      assign em_arr = em_arr | append: '#separator#' | append: em_text
    endfor
  endif
  assign em_arr = em_arr | split: '#separator#'
  assign words_count_arr = ''
  assign letters_count_arr = ''
  if em_arr.size > 0
    for words in em_arr offset: 1
      assign word = words | split: ' '
      assign words_count_arr = words_count_arr | append: word.size | append: ', '
      assign letters_count_arr = letters_count_arr | append: words.size | append: ', '
    endfor
  endif

  assign words_count_arr = words_count_arr | replace_last: ', ', '' | split: ', '
  assign letters_count_arr = letters_count_arr | replace_last: ', ', '' | split: ', '

  comment
   Main highlight types logic
  endcomment
  assign icon_url = ''
  assign icon_color = 'var(--text)'

  if highlight_color != 'rgba(0,0,0,0)' and highlight_color != ''
    assign icon_color = highlight_color
  endif

  capture text_highlight_icon
    assign has_text_highlight = false

    if title contains '<em>'
      case heading_highlight_type
        when 'squiggle'
          assign icon_url = 'icon-squiggle.svg' | asset_url
        when 'circle' or 'circle-hand-drawn' or 'underline-hand-drawn'
          echo '<span class="text-highlight__icon" data-highlight-holder>'

            when 'circle'
              render 'icon-circle'
            when 'circle-hand-drawn'
              render 'icon-circle-hand-drawn'
            when 'underline-hand-drawn'
              render 'icon-underline-hand-drawn'

          echo '</span>'
        when 'highlight' or 'squiggle'
          echo '<span class="text-highlight__icon text-highlight__icon--pseudo" data-highlight-holder></span>'
        when 'stroke' or 'circle' or 'circle-hand-drawn' or 'squiggle' or 'highlight' or 'highlight-color' or 'underline' or 'underline-hand-drawn' or 'alternate-font'
          assign has_text_highlight = true
      endcase
    endif
  endcapture

  capture icon_bg
    if icon_url != ''
      echo 'url( "' | append: icon_url | append: '" )'
    else
      echo 'none'
    endif
  endcapture
  capture icon_styles
    assign icon_bg = icon_bg | replace: '"', "'"
    echo 'style="--icon-url: ' | append: icon_bg | append: ';' | append: '--icon-color: ' | append: icon_color | append: ';"'
  endcapture

  assign text_highlight_wrapper_class = 'text-highlight-wrapper' | append: ' text-highlight-wrapper--' | append: heading_highlight_type
  capture text_highlight_start
    echo '<text-highlight class="text-highlight" ' | append: icon_styles | append: ' data-highlight-type="' | append: heading_highlight_type | append: '">'
    case heading_highlight_type
      when 'stroke' or 'highlight-color' or 'underline' or 'alternate-font'
        echo '<span class="text-highlight__string" data-highlight-holder>'
    endcase
  endcapture
  capture text_highlight_end
    echo text_highlight_icon
    case heading_highlight_type
      when 'stroke' or 'highlight-color' or 'underline' or 'alternate-font'
        echo '</span>'
    endcase
    echo '</text-highlight>'
  endcapture

  if title != blank and title contains '<em>'
    case heading_highlight_type
      when 'squiggle' or 'circle' or 'circle-hand-drawn' or 'stroke' or 'highlight' or 'highlight-color' or 'underline' or 'underline-hand-drawn' or 'alternate-font'
        assign title = title | replace: '<em>', text_highlight_start | replace: '</em>', text_highlight_end

      when 'circle' or 'circle-hand-drawn'
        comment
          Update icon's holder class based on the italicised words count
        endcomment
        assign title = title | split: 'class="text-highlight"'
        assign title_mod = ''
        for title_part in title offset: 1
          assign current_part = title_part

          if title_part contains 'text-highlight__icon'
            capture highlight_icon_classes
              echo 'text-highlight__icon'
              assign current_count = words_count_arr[forloop.index0] | times: 1
              assign letters_count = letters_count_arr[forloop.index0] | times: 1
              if current_count == 1
                echo ' text-highlight__icon--single-word'
              endif
              if letters_count < 6
                echo ' text-highlight__icon--short'
                echo ' text-highlight__icon--l' | append: letters_count
              endif
              if letters_count > 15
                echo ' text-highlight__icon--long'
              endif
            endcapture

            assign current_part = title_part | replace: 'text-highlight__icon', highlight_icon_classes
          endif

          unless forloop.last
            assign title_mod = title_mod | append: current_part | append: 'class="text-highlight"'
          else
            assign title_mod = title_mod | append: current_part
          endunless
        endfor
        assign title_first_part = title | first | append: 'class="text-highlight"'
        assign title_mod = title_mod | prepend: title_first_part
        assign title = title_mod
    endcase
  endif
-%}<div
              id="SectionPromotionRow--{{ block_id }}"
              class="promotion-row__item promotion-row__item--{{ forloop.index }} text-center{{ mobile_item_class }}{% if hover_scale %} hover-scale{% endif %}"
              {{ block.shopify_attributes }}
            >
              {%- if image_link -%}
                <a class="promotion-row__item__link" href="{{ button_link }}">
                  <span class="visually-hidden">{{ title | strip_html | strip }}</span>
                </a>
              {%- endif -%}

              <div class="overlay"></div>

              {%- render 'image-fill',
                is_background: true,
                img_object: image,
                sizes: sizes,
                classes: 'promotion-row__item__image-bg'
              -%}

              <div class="promotion-row__item__content">
                {%- if subheading != blank -%}
                  <div
                    class="promotion-row__item__subheading subheading-text"
                    {% if animations_enabled %}
                      data-aos="hero"
                      data-aos-anchor="{{ animation_anchor }}"
                      data-aos-order="1"
                    {% endif %}
                  >
                    {{ subheading }}
                  </div>
                {%- endif -%}

                {%- if title != blank -%}{% comment %}
  Modify text in title whenever there is a percentage off string, such as "20% off", so that output will include HTML tags with which to style promo texts better

  Dependencies:
    - title: {Object} Liquid object from settings that contains the heading that would be modified and rendered - `assign title = section.settings.title`

  Returns variables:
    - has_percent_off: {Boolean}
    - has_number_percent: {Boolean}
{%- endcomment -%}

{%- liquid
  assign numbers_string = '0%,1%,2%,3%,4%,5%,6%,7%,8%,9%' | split: ','
  assign has_percent_off = false
  assign has_number_percent = false
  for num in numbers_string
    if title contains num
      assign has_number_percent = true
    endif
  endfor

  if has_number_percent
    assign title = title | replace: '%', '<sup>%</sup>'

    if title contains '<sup>%</sup> off' or title contains '<sup>%</sup> OFF' or title contains '<sup>%</sup> Off'
      assign has_percent_off = true
      assign title = title | replace: '<sup>%</sup> off', '<sup>%</sup> <small>off</small>'
      assign title = title | replace: '<sup>%</sup> OFF', '<sup>%</sup> <small>OFF</small>'
      assign title = title | replace: '<sup>%</sup> Off', '<sup>%</sup> <small>Off</small>'
    endif
  endif
-%}{%- comment -%}
  This partial checks if a given string contains any numbers.
  Input:
  - text (String): The text to check for numbers.
  Output:
  - has_count_up (Boolean): True if the text contains numbers, false otherwise.
{%- endcomment -%}

{%- liquid
  assign numbers_string = '0,1,2,3,4,5,6,7,8,9' | split: ','
  assign has_count_up = false
  assign title_stripped = title | strip_html | strip_newlines

  for num in numbers_string
    if title_stripped contains num and count_up_enabled
      assign has_count_up = true
    endif
  endfor
-%}
{%- capture title_attributes -%}
                      class="h3 promotion-row__item__heading{% if has_text_highlight %} {{ text_highlight_wrapper_class }}{% endif %}{% if has_percent_off %} haspercentoff{% elsif has_number_percent %} hasnumberpercent{% endif %}"
                    {%- endcapture -%}

                  {% render 'title-text-reveal-and-highlights',
                    title: title,
                    title_attributes: title_attributes,
                    text_reveal: true,
                    has_count_up: has_count_up,
                    count_up_duration: count_up_duration,
                    has_text_highlight: has_text_highlight,
                    animation_anchor: animation_anchor,
                    animation_order: 1
                  %}
                {%- endif -%}

                {%- if description != blank -%}
                  <p
                    class="promotion-row__item__description"
                    {% if animations_enabled %}
                      data-aos="hero"
                      data-aos-anchor="{{ animation_anchor }}"
                      data-aos-order="1"
                    {% endif %}
                  >
                    {{ description }}
                  </p>
                {%- endif -%}

                {%- if button_text != blank -%}
                  {%- assign button_link = button_link | default: '#' -%}
                  <div
                    class="promotion-row__item__button main-buttons__item"
                    {% if animations_enabled %}
                      data-aos="hero"
                      data-aos-anchor="{{ animation_anchor }}"
                      data-aos-order="1"
                    {% endif %}
                  >
                    <a
                      class="btn {{ button_style }} {{ button_size }} {{ button_color }} {{ button_advanced_class }}"
                      href="{{ button_link }}"
                    >
                      <hover-button></hover-button>
                      {{- button_text -}}
                    </a>
                  </div>
                {%- endif -%}

                {%- if disclaimer != blank -%}
                  <p
                    class="promotion-row__item__disclaimer"
                    {% if animations_enabled %}
                      data-aos="hero"
                      data-aos-anchor="{{ animation_anchor }}"
                      data-aos-order="1"
                    {% endif %}
                  >
                    {{ disclaimer }}
                  </p>
                {%- endif -%}
              </div>
            </div>
          {%- endfor -%}
        </div>
      </div>
    {%- else -%}
      {%- render 'no-blocks' -%}
    {%- endif -%}
  </div>
</section>

{% schema %}
{
  "name": "Promotion row",
  "max_blocks": 4,
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "Modify selected block width",
      "default": "1",
      "options": [
        {"label": "First", "value": "1"},
        {"label": "Second", "value": "2"},
        {"label": "Third", "value": "3"},
        {"label": "Fourth", "value": "4"},
        {"label": "None", "value": "none"}
      ],
      "info": "Change the layout by increasing the width of one selected block"
    },
    {
      "type": "header",
      "content": "Number animation"
    },
    {
      "type": "checkbox",
      "id": "count_up_enabled",
      "label": "Show count up animation",
      "default": true
    },
    {
      "type": "range",
      "id": "count_up_duration",
      "label": "Count up animation speed",
      "min": 50,
      "max": 300,
      "step": 10,
      "unit": "%",
      "default": 100
    },
    {
      "type": "select",
      "id": "height",
      "label": "Desktop height",
      "default": "400",
      "options": [
        {"label": "450px", "value": "450"},
        {"label": "400px", "value": "400"},
        {"label": "350px", "value": "350"},
        {"label": "300px", "value": "300"},
        {"label": "250px", "value": "250"},
        {"label": "200px", "value": "200"},
        {"label": "150px", "value": "150"}
      ]
    },
    {
      "type": "checkbox",
      "id": "enable_mobile_height",
      "label": "Enable mobile height",
      "default": false
    },
    {
      "type": "select",
      "id": "mobile_height",
      "label": "Mobile height",
      "default": "400",
      "options": [
        {"label": "450px", "value": "450"},
        {"label": "400px", "value": "400"},
        {"label": "350px", "value": "350"},
        {"label": "300px", "value": "300"},
        {"label": "250px", "value": "250"},
        {"label": "200px", "value": "200"},
        {"label": "150px", "value": "150"}
      ]
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background"
    },
    {
      "type": "color_background",
      "id": "gradient",
      "label": "Overlay gradient"
    },
    {
      "type": "header",
      "content": "Mobile slider"
    },
    {
      "type": "checkbox",
      "id": "enable_slider_mobile",
      "label": "Enable slider",
      "default": true,
      "info": "Horizontal slider in mobile layout."
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Promos per row",
      "default": "1",
      "options": [
        {"label": "1", "value": "1"},
        {"label": "2", "value": "2"}
      ]
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wrapper--full-padded",
      "options": [
        {"value": "wrapper--full-padded", "label": "Full width padded"},
        {"value": "wrapper", "label": "Page width"}
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Custom promo",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "header",
          "content": "Text"
        },
        {
          "type": "richtext",
          "id": "subheading",
          "label": "Subheading"
        },
        {
          "type": "range",
          "id": "subheading_size",
          "label": "Subheading size",
          "default": 100,
          "min": 75,
          "max": 250,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "richtext",
          "id": "heading",
          "label": "Heading",
          "info": "Highlight one or two key words in your heading by italicizing them, then choose the highlight option below",
          "default": "<p>50% OFF</p>"
        },
        {
          "type": "range",
          "id": "heading_size",
          "label": "Heading size",
          "default": 280,
          "min": 75,
          "max": 350,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "header",
          "content": "Highlight"
        },
        {
          "type": "select",
          "id": "heading_highlight_type",
          "label": "Type",
          "default": "underline-hand-drawn",
          "info": "The font choice for the \"Alternate font\" type can be configured in the theme typography settings.",
          "options": [
            {"value": "italics", "label": "Italics (no decoration)"},
            {"value": "highlight", "label": "Highlight"},
            {"value": "highlight-color", "label": "Text color"},
            {"value": "underline", "label": "Underline (digital)"},
            {"value": "underline-hand-drawn", "label": "Underline (hand-drawn)"},
            {"value": "squiggle", "label": "Squiggle"},
            {"value": "circle", "label": "Circle (digital)"},
            {"value": "circle-hand-drawn", "label": "Circle (hand-drawn)"},
            {"value": "stroke", "label": "Stroke (outlined text)"},
            {"value": "alternate-font", "label": "Alternate font"}
          ]
        },
        {
          "type": "color",
          "id": "highlight_color",
          "label": "Highlight color",
          "default": "#000"
        },
        {
          "type": "color",
          "id": "highlight_text_color",
          "label": "Text color"
        },
        {
          "type": "text",
          "id": "description",
          "label": "Description",
          "default": "Share details about the promotion"
        },
        {
          "type": "range",
          "id": "description_size",
          "label": "Description size",
          "default": 100,
          "min": 75,
          "max": 150,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "text",
          "id": "disclaimer",
          "label": "Disclaimer text"
        },
        {
          "type": "range",
          "id": "disclaimer_size",
          "label": "Disclaimer size",
          "default": 75,
          "min": 75,
          "max": 150,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "header",
          "content": "Buttons"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "info": "Leave blank to link entire block"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "button_color",
          "label": "Color",
          "default": "btn--black",
          "options": [
            {"label": "Primary", "value": "btn--primary"},
            {"label": "Secondary", "value": "btn--secondary"},
            {"label": "White", "value": "btn--white"},
            {"label": "Black", "value": "btn--black"}
          ]
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button style",
          "default": "btn--solid",
          "options": [
            {"label": "Solid", "value": "btn--solid"},
            {"label": "Outline", "value": "btn--outline"},
            {"label": "Solid with border", "value": "btn--solid-border"},
            {"label": "Soft", "value": "btn--soft"},
            {"label": "Text", "value": "btn--text"}
          ]
        },
        {
          "type": "select",
          "id": "button_size",
          "label": "Size",
          "default": "btn--medium",
          "options": [
            {"label": "Small", "value": "btn--small"},
            {"label": "Medium", "value": "btn--medium"},
            {"label": "Large", "value": "btn--large"}
          ]
        },
        {
          "type": "header",
          "content": "Colors"
        },
        {
          "type": "color",
          "id": "bg_color",
          "label": "Background"
        },
        {
          "type": "color_background",
          "id": "gradient_background",
          "label": "Overlay gradient",
          "info": "To apply the gradient color, remove the 'Background' color above"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text"
        },
        {
          "type": "range",
          "id": "overlay_opacity",
          "label": "Overlay opacity",
          "info": "Improves readability of text",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "%",
          "default": 10
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Promotion row",
      "blocks": [
        {
          "type": "column",
          "settings": {
            "subheading": "<p>IN-STORE AND ONLINE</p>",
            "subheading_size": 75,
            "heading": "<p>20% OFF</p>",
            "heading_size": 295,
            "highlight_color": "#000",
            "description": "Share details about the promotion",
            "disclaimer": "*Use this text for a disclaimer.",
            "text_color": "#ffffff"
          }
        },
        {
          "type": "column",
          "settings": {
            "subheading": "<p>For a limited time</p>",
            "subheading_size": 75,
            "heading": "<p><em>FREE PRODUCT</em></p>",
            "heading_size": 205,
            "heading_highlight_type": "underline-hand-drawn",
            "highlight_color": "#000",
            "description": "With every purchase over $99",
            "description_size": 80,
            "overlay_opacity": 50,
            "text_color": "#ffffff"
          }
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["header", "aside", "footer"]
  }
}
{% endschema %}
