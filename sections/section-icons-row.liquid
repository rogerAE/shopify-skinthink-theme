{% comment %} Icons row {% endcomment %}
{%- liquid
  assign section_width = section.settings.width
  assign bg_color = section.settings.bg_color
  assign gradient = section.settings.gradient | default: 'none'
  assign color_body_bg = settings.color_body_bg
  assign box_color = section.settings.box_color
  assign text_color = section.settings.text_color
  assign color_border = section.settings.color_border
  assign alignment = section.settings.alignment
  assign columns = section.settings.columns
  assign animations_enabled = settings.animations_enabled
  assign animation_anchor = '#IconsRow--' | append: section.id
  assign animation_delay = 150
  assign heading = section.settings.heading
  assign subheading = section.settings.subheading
  assign heading_size = section.settings.heading_size | times: 0.01
  assign text_size = section.settings.text_size | times: 0.01
  assign show_vertical_borders = section.settings.show_vertical_borders
  assign show_horizontal_borders = false
  assign show_top_border = section.settings.show_top_border
  assign show_bottom_border = section.settings.show_bottom_border
  assign button_text = section.settings.button_text
  assign button_link = section.settings.button_link | default: '#!'
  assign button_style = section.settings.button_style
  assign button_color = section.settings.button_color
  assign button_size = section.settings.button_size
  assign icons_width = section.settings.icons_width
  assign layout_mobile = section.settings.layout_mobile
  assign has_subheading = false
  assign blocks_size = section.blocks.size

  assign flex = false
  if columns > blocks_size
    assign flex = true
  endif

  assign no_box_color = false
  if box_color.alpha == 0.0 or box_color == ''
    assign no_box_color = true
  endif

  if bg_color.alpha == 0.0 or bg_color == ''
    assign bg_color = color_body_bg
  endif

  assign boxes = true
  if box_color == bg_color or no_box_color
    assign boxes = false
  endif

  assign bg_color_set = false
  if gradient != 'none' or bg_color.alpha != 0.0 and bg_color != ''
    assign bg_color_set = true
  endif

  assign blocks_without_text = section.blocks | map: 'settings' | where: 'text', ''
  if blocks_without_text.size == blocks_size
    assign has_subheading = true
  endif

  assign single_block = false
  if blocks_size == 1 and alignment == 'center' or alignment == 'inline-center'
    assign single_block = true
  endif

  assign icon_max_size = icons_width
  if alignment == 'inline-center' or alignment == 'inline-left' and icons_width >= 50
    assign icon_max_size = 50
  endif

  assign mobile_class = ' grid--mobile'
  assign mobile_item_class = ' grid__item'
  if layout_mobile == 'carousel'
    assign mobile_class = ' carousel--mobile'
    assign mobile_item_class = ' carousel__item'
  elsif layout_mobile == 'stacked'
    assign mobile_class = ' stacked--mobile'
  endif

  assign items_on_last_row = blocks_size | modulo: columns
  assign items_on_last_row_mobile = blocks_size | modulo: 2
  if items_on_last_row == 0
    assign items_on_last_row = columns
  endif

  capture section_classes
    echo 'section-padding icons-row'

    if show_vertical_borders
      echo ' icons-row--borders-vertical'
    endif

    if show_top_border
      assign show_horizontal_borders = true
      echo ' icons-row--borders-top'
    endif

    if show_bottom_border
      assign show_horizontal_borders = true
      echo ' icons-row--borders-bottom'
    endif

    if show_horizontal_borders
      echo ' icons-row--borders-horizontal'
    endif

    unless section_width == 'wrapper--full'
      echo ' icons-row--spaced'
    endunless

    comment
      Remove mobile section padding when there is no text, borders are enabled and mobile layout is grid
    endcomment
    if layout_mobile == 'grid' and heading == blank and subheading == blank and show_vertical_borders and show_top_border
      echo ' icons-row--no-mobile-top-space'
    endif
    if layout_mobile == 'grid' and button_text == blank and show_vertical_borders and show_bottom_border
      echo ' icons-row--no-mobile-bottom-space'
    endif

    render 'button-fallback-classes', primary_color: button_color, section_bg_color: bg_color
  endcapture

  assign button_advanced_class = 'btn--advanced'
  if button_style != 'btn--text'
    assign button_advanced_class = button_advanced_class | append: ' btn--advanced-width-height'
  endif
-%}

{{ 'section-icons-row.css' | asset_url | stylesheet_tag }}

{%- style -%}
  #IconsRow--{{ section.id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
    --icon-size: {{ icons_width }}px;
    --icon-max-size: {{ icon_max_size }}px;

    {% if bg_color_set -%}
      {%- if gradient != 'none' -%}
        --bg: {{ gradient }};
      {%- else -%}
        --bg: {{ bg_color }};
      {%- endif -%}
    {%- endif %}

    {% if color_border.alpha != 0.0 and color_border != '' -%}
      --border: {{ color_border }};
    {%- endif %}
  }

  @media screen and (max-width: 767px) {
    #IconsRow--{{ section.id }} {
      --icon-max-size: 40px;
    }
  }

  #IconsRow--{{ section.id }} .icons-row__slider {
      --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }});
      --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }});
    }

  {% if box_color.alpha != 0.0 and box_color != '' -%}
    #IconsRow--{{ section.id }} .icons-row-item--box {
      --bg: {{ box_color }}
    }
  {%- endif %}

  {% if text_color.alpha != 0.0 and text_color != '' -%}
    #IconsRow--{{ section.id }} {
      --text: {{ text_color }};
      --text-lighten: {{ text_color | color_lighten: 20 }};
    }
  {%- endif %}
{%- endstyle -%}

<section
  id="IconsRow--{{ section.id }}"
  class="{{ section_classes }}"
  data-section-id="{{ section.id }}"
  data-section-type="icons-row"
>
  <div class="{{ section_width }}">
    <div class="icons-row__wrapper{% if single_block %} icons-row__wrapper--single-block-center{% endif %} text-{{ alignment }}">
      {%- if heading != blank or subheading != blank -%}
        <div class="icons-row__headings">
          {%- if heading != blank -%}
            <h2
              class="icons-row__heading"
              {% if animations_enabled %}
                data-aos="fade-up"
                data-aos-anchor="{{ animation_anchor }}"
                data-aos-delay="{{ animation_delay }}"
                {%- assign animation_delay = animation_delay | plus: 150 -%}
              {% endif %}
            >
              {{- heading | escape -}}
            </h2>
          {%- endif -%}

          {%- if subheading != blank -%}
            <div
              class="icons-row__subheading"
              {% if animations_enabled %}
                data-aos="fade-up"
                data-aos-anchor="{{ animation_anchor }}"
                data-aos-delay="{{ animation_delay }}"
                {%- assign animation_delay = animation_delay | plus: 150 -%}
              {% endif %}
            >
              {{- subheading -}}
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}

      {%- if blocks_size > 0 -%}
        <div
          class="icons-row__slider{{ mobile_class }} text-{{ alignment }}{% if flex %} icons-row__slider--flex{% endif %} items--{{ columns }}"
          data-slider
          role="group"
        >
          {%- for block in section.blocks -%}
            {%- liquid
              assign index = forloop.index
              assign title = block.settings.title
              assign text = block.settings.text
              assign image = block.settings.icon_image
              assign icon = block.settings.icon_name
              assign retina_size = icons_width | times: 2
              assign image_widths = icons_width | append: ', ' | append: retina_size
              assign sizes = icons_width | append: 'px'
              assign border_class = ''
              assign no_image = false
              assign no_render = false

              if image == blank and icon == 'none'
                assign no_image = true
              endif

              if title == blank and no_image and text == blank
                assign no_render = true
                assign items_on_last_row = items_on_last_row | minus: 1
              endif

              if show_horizontal_borders and blocks_size > columns
                assign border_class = ' icons-row-item--border-bottom'

                assign last_item_on_full_row = blocks_size | minus: items_on_last_row

                if last_item_on_full_row == index
                  assign show_horizontal_borders = false
                endif
              endif

              assign position_on_row = index | modulo: columns
              assign even_item = index | modulo: 2
              assign position_pre_last_item = section.blocks.size | minus: 1

              capture item_classes
                echo 'icons-row-item'
                echo mobile_item_class

                if boxes
                  echo ' icons-row-item--box'
                endif

                if has_subheading
                  echo ' icons-row-item--center'
                endif

                echo border_class

                if items_on_last_row_mobile == 1 and layout_mobile == 'grid' and index == 1
                  echo ' icons-row-item--full'
                endif

                case position_on_row
                  when 0
                    echo ' icons-row-item--last-on-row'
                  when 1
                    echo ' icons-row-item--first-on-row'
                endcase

                if even_item == 0
                  echo ' icons-row-item--even'
                else
                  echo ' icons-row-item--odd'
                endif

                case index
                  when 1
                    echo ' icons-row-item--first'
                  when section.blocks.size
                    echo ' icons-row-item--last'
                  when position_pre_last_item
                    echo ' icons-row-item--pre-last'
                endcase
              endcapture
            -%}

            {%- unless no_render -%}
              <div class="{{ item_classes }}" {{ block.shopify_attributes }}>
                <div
                  class="icons-row-item__wrapper"
                  {% if animations_enabled %}
                    data-aos="fade-up"
                    data-aos-anchor="{{ animation_anchor }}"
                    data-aos-delay="{{ animation_delay }}"
                    {%- assign animation_delay = animation_delay | plus: 150 -%}
                  {% endif %}
                >
                  {%- unless no_image -%}
                    <div class="icons-row-item__icon icon-stroke">
                      {%- liquid
                        if image != blank
                          render 'image-fill', img_object: image, width: retina_size, widths: image_widths, sizes: sizes, classes: 'icons-row-item__image'
                        else
                          render 'icons', icon: icon
                        endif
                      -%}
                    </div>
                  {%- endunless -%}

                  {%- if title != blank or text != blank -%}
                    <div class="icons-row-item__content">
                      {%- if title != blank -%}
                        <h3 class="icons-row-item__title">{{ title }}</h3>
                      {%- endif -%}

                      {%- if text != blank -%}
                        <div class="icons-row-item__text">{{ text }}</div>
                      {%- endif -%}
                    </div>
                  {%- endif -%}
                </div>
              </div>
            {%- endunless -%}
          {%- endfor -%}
        </div>
      {%- else -%}
        {%- render 'no-blocks' -%}
      {%- endif -%}

      {%- if button_text != blank -%}
        <div
          class="icons-row__actions"
          {% if animations_enabled %}
            data-aos="fade-up"
            data-aos-anchor="{{ animation_anchor }}"
            data-aos-delay="{{ animation_delay }}"
          {% endif %}
        >
          <a
            class="btn {{ button_style }} {{ button_size }} {{ button_color }} {{ button_advanced_class }}"
            href="{{ button_link }}"
          >
            <hover-button></hover-button>
            {{- button_text -}}
          </a>
        </div>
      {%- endif -%}
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Icons row",
  "max_blocks": 6,
  "settings": [
    {
      "type": "header",
      "content": "Heading"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
    {
      "type": "richtext",
      "id": "subheading",
      "label": "Subheading text"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Alignment",
      "options": [
        {"label": "Center", "value": "center"},
        {"label": "Left", "value": "left"},
        {"label": "Inline center", "value": "inline-center"},
        {"label": "Inline left", "value": "inline-left"}
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "columns",
      "label": "Icons per row",
      "default": 3,
      "min": 2,
      "max": 4,
      "step": 1
    },
    {
      "type": "range",
      "id": "icons_width",
      "label": "Icons width",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "default": 20,
      "info": "Max size on mobile is 40px"
    },
    {
      "type": "checkbox",
      "id": "show_vertical_borders",
      "label": "Show vertical borders",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_top_border",
      "label": "Show top border",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_bottom_border",
      "label": "Show bottom border",
      "default": true
    },
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading size",
      "default": 120,
      "min": 70,
      "max": 200,
      "step": 10,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "default": 100,
      "min": 70,
      "max": 150,
      "step": 10,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background color"
    },
    {
      "type": "color_background",
      "id": "gradient",
      "label": "Overlay gradient"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#333"
    },
    {
      "type": "color",
      "id": "box_color",
      "label": "Boxes"
    },
    {
      "type": "color",
      "id": "color_border",
      "label": "Border",
      "default": "#333"
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Text"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Link"
    },
    {
      "type": "select",
      "id": "button_color",
      "label": "Button color",
      "default": "btn--black",
      "options": [
        {"label": "Primary", "value": "btn--primary"},
        {"label": "Secondary", "value": "btn--secondary"},
        {"label": "White", "value": "btn--white"},
        {"label": "Black", "value": "btn--black"}
      ]
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button style",
      "default": "btn--solid",
      "options": [
        {"label": "Solid", "value": "btn--solid"},
        {"label": "Outline", "value": "btn--outline"},
        {"label": "Solid with border", "value": "btn--solid-border"},
        {"label": "Soft", "value": "btn--soft"},
        {"label": "Text", "value": "btn--text"}
      ]
    },
    {
      "type": "select",
      "id": "button_size",
      "label": "Size",
      "default": "btn--medium",
      "options": [
        {"label": "Small", "value": "btn--small"},
        {"label": "Medium", "value": "btn--medium"},
        {"label": "Large", "value": "btn--large"}
      ]
    },
    {
      "type": "header",
      "content": "Mobile"
    },
    {
      "type": "select",
      "id": "layout_mobile",
      "label": "Layout",
      "default": "grid",
      "options": [
        {"value": "grid", "label": "Grid"},
        {"value": "stacked", "label": "Stacked"},
        {"value": "carousel", "label": "Slider"}
      ]
    },
    {
      "type": "header",
      "content": "Section spacing"
    },
    {
      "type": "select",
      "id": "width",
      "label": "Width",
      "default": "wrapper",
      "options": [
        {"value": "wrapper--full", "label": "Full width"},
        {"value": "wrapper--full-padded", "label": "Full width padded"},
        {"value": "wrapper", "label": "Page width"}
      ]
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding top",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding bottom",
      "default": 60
    }
  ],
  "blocks": [
    {
      "type": "text",
      "name": "Item",
      "settings": [
        {
          "type": "select",
          "id": "icon_name",
          "label": "Icon",
          "default": "clock",
          "options": [
            {"value": "none", "label": "None"},
            {"value": "archive", "label": "Archive", "group": "Generic"},
            {"value": "award", "label": "Award", "group": "Generic"},
            {"value": "bee", "label": "Bee", "group": "Generic"},
            {"value": "bell", "label": "Bell", "group": "Generic"},
            {"value": "calendar", "label": "Calendar", "group": "Generic"},
            {"value": "camera", "label": "Camera", "group": "Generic"},
            {"value": "check", "label": "Check", "group": "Generic"},
            {"value": "clipboard", "label": "Clipboard", "group": "Generic"},
            {"value": "clock", "label": "Clock", "group": "Generic"},
            {"value": "compass", "label": "Compass", "group": "Generic"},
            {"value": "dollar-sign", "label": "Dollar sign", "group": "Generic"},
            {"value": "download", "label": "Download", "group": "Generic"},
            {"value": "flower", "label": "Flower", "group": "Generic"},
            {"value": "gem", "label": "Gem", "group": "Generic"},
            {"value": "heart", "label": "Heart", "group": "Generic"},
            {"value": "key", "label": "Key", "group": "Generic"},
            {"value": "leaf", "label": "Leaf", "group": "Generic"},
            {"value": "lock", "label": "Lock", "group": "Generic"},
            {"value": "mail", "label": "Mail", "group": "Generic"},
            {"value": "map-pin", "label": "Map", "group": "Generic"},
            {"value": "message", "label": "Message", "group": "Generic"},
            {"value": "music", "label": "Music", "group": "Generic"},
            {"value": "pencils", "label": "Pencils", "group": "Generic"},
            {"value": "phone", "label": "Phone", "group": "Generic"},
            {"value": "scientific", "label": "Scientific", "group": "Generic"},
            {"value": "shield", "label": "Shield", "group": "Generic"},
            {"value": "smile", "label": "Smile", "group": "Generic"},
            {"value": "star", "label": "Star", "group": "Generic"},
            {"value": "tree", "label": "Tree", "group": "Generic"},
            {"value": "truck", "label": "Truck", "group": "Generic"},
            {"value": "credit-card", "label": "Credit card", "group": "Commerce"},
            {"value": "fair-trade", "label": "Fair trade", "group": "Commerce"},
            {"value": "package", "label": "Package", "group": "Commerce"},
            {"value": "storefront", "label": "Storefront", "group": "Commerce"},
            {"value": "support", "label": "Support", "group": "Commerce"},
            {"value": "eco-friendly", "label": "Eco friendly", "group": "Environment"},
            {"value": "recycle", "label": "Recycle", "group": "Environment"},
            {"value": "recycle-circle", "label": "Recycle circle", "group": "Environment"},
            {"value": "reuseable", "label": "Reuseable", "group": "Environment"},
            {"value": "cotton", "label": "Cotton", "group": "Fashion"},
            {"value": "ethically-made", "label": "Ethically made", "group": "Fashion"},
            {"value": "plant-based", "label": "Plant based", "group": "Fashion"},
            {"value": "dishwasher-safe", "label": "Dishwasher safe", "group": "Food and Drink"},
            {"value": "frozen", "label": "Frozen", "group": "Food and Drink"},
            {"value": "non-gmo", "label": "Non GMO", "group": "Food and Drink"},
            {"value": "organic", "label": "Organic", "group": "Food and Drink"},
            {"value": "oven-safe", "label": "Oven safe", "group": "Food and Drink"},
            {"value": "vegan", "label": "Vegan", "group": "Food and Drink"},
            {"value": "vegetarian", "label": "Vegetarian", "group": "Food and Drink"},
            {"value": "cruelty-free", "label": "Cruelty free", "group": "Health/Beauty"},
            {"value": "fragrance-free", "label": "Fragrance free", "group": "Health/Beauty"},
            {"value": "paw-heart", "label": "Paw heart", "group": "Health/Beauty"},
            {"value": "phthalate-free", "label": "Phthalate free", "group": "Health/Beauty"},
            {"value": "sulfate-free", "label": "Sulfate free", "group": "Health/Beauty"},
            {"value": "use-by", "label": "Use by", "group": "Health/Beauty"}
          ]
        },
        {
          "type": "image_picker",
          "id": "icon_image",
          "label": "Icon image",
          "info": "If image set it will override the icon"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Feature"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Icons row",
      "blocks": [
        {
          "type": "text",
          "settings": {
            "icon_name": "truck",
            "title": "Free Shipping",
            "text": "<p>on all order over $99</p>"
          }
        },
        {
          "type": "text",
          "settings": {
            "icon_name": "check",
            "title": "Free Returns",
            "text": "<p>within 30 days of purchase</p>"
          }
        },
        {
          "type": "text",
          "settings": {
            "icon_name": "eco-friendly",
            "title": "1% Donated",
            "text": "<p>to forest conservation</p>"
          }
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": ["header", "aside"]
  }
}
{% endschema %}
